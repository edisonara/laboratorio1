# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: edison23
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: edisonapp2
# "service" is the name of this project. This will also be added to your AWS resource names.
service: laboratorio1

provider:
  name: aws
  runtime: nodejs20.x
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/Proveedores


functions:
  hello:
    handler: src/handler.hello
    events:
      - httpApi:
          path: /
          method: get
  crearProveedor:
    handler: src/crearProveedor.crearProveedor
    events:
      - httpApi:
          path: /proveedores
          method: post
  obtenerProveedores:
    handler: src/obtenerProveedores.obtenerProveedores
    events:
      - httpApi:
          path: /proveedores
          method: get
  obtenerProveedor:
    handler: src/obtenerProveedor.obtenerProveedor
    events:
      - httpApi:
          path: /proveedores/{id}
          method: get
  eliminarProveedor:
    handler: src/eliminarProveedor.eliminarProveedor
    events:
      - httpApi:
          path: /proveedores/{id}
          method: delete
  actualizarProveedor:
    handler: src/editarProveedor.editarProveedor
    events:
      - httpApi:
          path: /proveedores/{id}
          method: put


#Esta tabla almacena la informaci√≥n de los proveedores que suministran los productos.
resources:
  Resources:
    ProveedoresTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Proveedores
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH